/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.dagger = "2.16"
versions.room = "2.0.0"
versions.lifecycle = "2.0.0"
versions.paging = "2.0.0"
versions.navigation = "1.0.0-alpha06"
versions.work = "1.0.0-alpha09"
versions.coroutines = "0.22.5"
versions.coroutines_adapter = "1.0.0"
versions.support = "27.1.1"
versions.constraint_layout = "1.1.3"
versions.junit = "4.12"
versions.timber = "4.5.1"
versions.google_service = "3.2.1"
versions.kotlin = "1.2.71"
versions.glide = "4.8.0"
versions.google_services_plugin = "4.0.1"
versions.fire_store = "17.1.1"
versions.firebase_core = "16.0.3"
versions.android_gradle_plugin = '3.2.0'




versions.retrofit = "2.3.0"
versions.okHttp = "3.8.1"
versions.okhttp_logging_interceptor = "3.9.0"
versions.firebase_auth = "16.0.0"
versions.firebase_maps = "15.0.1"
versions.firebase_location = "15.0.1"
versions.firebase_core = "16.0.3"
versions.firebase_messaging = "17.3.1"
versions.firebase_datebase = "16.0.2"

versions.stetho = "1.5.0"
versions.arch_core = "1.1.1"
versions.atsl_runner = "1.0.2"

versions.anko = "0.10.6"

def deps = [:]

def support = [:]
support.app_compat = "com.android.support:appcompat-v7:$versions.support"
support.recyclerview = "com.android.support:recyclerview-v7:$versions.support"
support.cardview = "com.android.support:cardview-v7:$versions.support"
support.design = "com.android.support:design:$versions.support"
support.v4 = "com.android.support:support-v4:$versions.support"
support.core_utils = "com.android.support:support-core-utils:$versions.support"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def coroutines = [:]
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
coroutines.adapter = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:$versions.coroutines_adapter"
deps.coroutines = coroutines

def lifecycle = [:]
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.testing = "android.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.okhttp = "com.squareup.okhttp3:okhttp:$versions.okHttp"

deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def navigation = [:]
navigation.fragment = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.safe_args_plugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
navigation.testing = "android.arch.navigation:navigation-testing-ktx:$versions.navigation"
navigation.ui = "android.arch.navigation:navigation-ui-ktx:$versions.navigation"
deps.navigation = navigation

def work = [:]
work.testing = "android.arch.work:work-testing:$versions.work"
work.firebase = "android.arch.work:work-firebase:$versions.work"
work.runtime = "android.arch.work:work-runtime-ktx:$versions.work"
deps.work = work

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger

def espresso = [:]
espresso.core = "com.android.support.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "com.android.support.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.inline = "org.mockito:mockito-inline:$versions.mockito"
mockito.android = "org.mockito:mockito-android:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
deps.mockito = mockito

def atsl = [:]
atsl.runner = "com.android.support.test:runner:$versions.atsl_runner"
atsl.rules = "com.android.support.test:rules:$versions.atsl_runner"
deps.atsl = atsl

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jre8:$versions.kotlin"
kotlin.stdlib_jdk = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

def anko = [:]
anko.core = "org.jetbrains.anko:anko:$versions.anko"
anko.coroutines = "org.jetbrains.anko:anko-coroutines:$versions.anko"
deps.anko = anko

def gms = [:]
gms.auth = "com.google.android.gms:play-services-auth:$versions.firebase_auth"
gms.maps = "com.google.android.gms:play-services-maps:$versions.firebase_maps"
gms.location = "com.google.android.gms:play-services-location:$versions.firebase_location"
deps.gms = gms

def firebase = [:]
firebase.core = "com.google.firebase:firebase-core:$versions.firebase_core"
firebase.fire_store = "com.google.firebase:firebase-firestore:$versions.fire_store"
deps.firebase = firebase

def stetho = [:]
stetho.stetho = "com.facebook.stetho:stetho:$versions.stetho"
stetho.okhttp3 = "com.facebook.stetho:stetho-okhttp3:$versions.stetho"
deps.stetho = stetho

deps.paging = "androidx.paging:paging-runtime:$versions.paging"
deps.constraint_layout = "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.google_service = "com.google.gms:google-services:$versions.google_service"
ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 28
ext.build_versions = build_versions

ext.deps = deps

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url "https://jitpack.io" }
}

ext.addRepos = this.&addRepos